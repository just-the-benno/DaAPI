@inherits AdvancedFormComponent<ChangeLocalUserPasswordViewModel>
@inject DaAPIService _service
@inject IStringLocalizer<ChangeLocalUserPasswordModal> L

<CascadingValue Name="DisableFormElements" Value="@_sendingRequestInProgress">
    <EditForm EditContext="@EditContext" OnValidSubmit="SendPasswordChangeRequest">
        <DataAnnotationsValidator />
        <div class="modal-body">
            <div class="input-group mb-3">
                <BootstrapInputText @bind-Value="Model.Password" type="password" class="form-control" placeholder="@L["PasswordPlaceholder"]"  />
                <div class="input-group-append">
                    <div class="input-group-text">
                        <span class="fas fa-lock"></span>
                    </div>
                </div>
                <div class="invalid-feedback mb-3">
                    <ValidationMessage For="@(() => Model.Password)" />
                </div>
            </div>
            <div class="input-group mb-3">
                <BootstrapInputText @bind-Value="Model.PasswordConfirmation" type="password" class="form-control" placeholder="@L["PasswordConfirmationPlaceholder"]"  />
                <div class="input-group-append">
                    <div class="input-group-text">
                        <span class="fas fa-lock"></span>
                    </div>
                </div>
                <div class="invalid-feedback mb-3">
                    <ValidationMessage For="@(() => Model.PasswordConfirmation)" />
                </div>
            </div>

            @if (_serviceErrorOccured)
            {
                <div class="alert alert-danger">
                    @L["PasswordChangeError"]
                </div>
            }

        </div>
        <div class="modal-footer">
            <div class="flex-fill"></div>
            <button type="button" @onclick="Cancel" class="btn btn-secondary">@L["CancelButtonCaption"]</button>
            <SendingAwareSubmitFormButton Caption="@L["ChangeButtonCaption"]" ExecutingCaption="@L["ChangeButtonExecutingCaption"]" FormIsSending="_sendingRequestInProgress" FormIsValid="FormIsValid" />
        </div>
    </EditForm>
</CascadingValue>
@code {

    #region Fields

    private Boolean _sendingRequestInProgress = false;
    private Boolean _serviceErrorOccured = false;

    #endregion

    #region Properties

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public LocalUserOverview User { get; set; }

    #endregion

    #region Methods

    public void Cancel() => BlazoredModal.Cancel();

    public async Task SendPasswordChangeRequest()
    {
        var request = Model.GetRequest();
        _serviceErrorOccured = false;
        _sendingRequestInProgress = true;

        Boolean serviceResult = await _service.ResetLocalUserPassword(User.Id, request);
        _serviceErrorOccured = !serviceResult;
        _sendingRequestInProgress = false;
        if (serviceResult == true)
        {
            await BlazoredModal.Close(ModalResult.Ok<Boolean>(true));
        }
    }

    #endregion

}
